#!/usr/bin/env nu

# TODO make these globals configurable
let library = "~/.library" | path expand
let viewer = "rlg-sioyek"
let db_schema = $"($library)/bootstrap.sql"
let db_json = $"($library)/state.json"
let db = $"($library)/sioyek.db"
let browser = "qutebrowser"

def from_bib [item] {
    let path = $"($library)/bib/($item).bib"
    let meta = cat $path | head -n1 | sed 's/[@,]//g' | split row "{"
    if (($meta | get 1) != $item) {
        error make { msg: "Key of the item does not match, please go fix" }
    }
    let body_record = cat $path | sed -n '/=/p' | sed 's/=/:/;s/^  //;s/,$//;s/{\(.*\)}/"\1"/;s/\\`//' | from yaml
    let type = $meta | get 0
    let record = {
        ...$body_record
        type: $type
        key: $item
    }
    $record
}

def "main show" [
    item: string
] {
    from_bib $item | print
}

def "main open" [
    item: string
    --doi
] {
    let pdf_file = $"($library)/pdf/($item).pdf"
    let bib = from_bib $item

    if (($pdf_file | path exists) and $doi != true) {
        nu -c $"($viewer) ($pdf_file) ($db_schema) ($db) ($db_json)"
    } else if ("url" in $bib) {
        nu -c $"($browser) ($bib.url)"
    } else if ("doi" in $bib) {
        nu -c $"($browser) https://doi.org/($bib.doi)"
    }
}

def "main export" [
    collection: string,
    --short
] {
    mut shorten_sed_cmd = ""
    if $short {
        let short_map = {
            "Proceedings of the ": "",
            "Proceedings on ": "",
        }
        let sed_list = $short_map | transpose from to | each { |e| $"s/($e.from)/($e.to)/" }
        $shorten_sed_cmd = $sed_list | str join ";"
    }
    let collection = open $"($library)/collections/($collection).yml"
    let dst = $collection | get dst
    let bib_files = $collection | get src | sort | each {
        |e| $"($library)/bib/($e).bib"
    }
    awk 'FNR==1 && NR!=1 {print ""} {print}' ...$bib_files | sed $shorten_sed_cmd | save -f $dst
}

def "main yank" [
    item: string
] {
    cat $"($library)/bib/($item).bib" | xclip -selection clipboard
}

def main [] {
    print "No subcommand given"
}

