#!/bin/sh

export BORG_REPO=$1

if [ -z "$SUDO_USER" ]; then
    export BORG_PASSCOMMAND=pass-borg-default
else
    export BORG_PASSCOMMAND="sudo su - $SUDO_USER -c pass-borg-default";
fi

# some helpers and error handling:
info() { printf "\n%s %s\n\n" "$( date )" "$*" >&2; }
trap 'echo $( date ) Backup interrupted >&2; exit 2' INT TERM

info "Starting backup"

borg create                    	    \
    --list			                \
    --filter E                      \
    --stats                         \
    --show-rc                       \
    --compression lz4               \
    --exclude-caches                \
    --exclude '/home/*/.cache/*'    \
    --exclude '/home/*/mnt'         \
    --exclude '/dev/*'              \
    --exclude '/proc/*'             \
    --exclude '/sys/*'              \
    --exclude '/tmp/*'              \
    --exclude '/run/*'              \
    --exclude '/mnt/*'              \
    --exclude '/efi'                \
    --exclude '/media/*'            \
    --exclude '/lost+found'         \
    --exclude '/home/*/.gvfs'       \
                                    \
    $BORG_REPO::'{hostname}-{now}'  \
    /                               \

backup_exit=$?

info "Pruning repository"

# Use the `prune` subcommand to maintain 7 daily, 4 weekly and 6 monthly
# archives of THIS machine. The '{hostname}-' prefix is very important to
# limit prune's operation to this machine's archives and not apply to
# other machines' archives also:

borg prune                          \
    --list                          \
    --glob-archives '{hostname}-*'  \
    --show-rc                       \
    --keep-daily    7               \
    --keep-weekly   4               \
    --keep-monthly  6               \
&& borg compact

prune_exit=$?

# use highest exit code as global exit code
global_exit=$(( backup_exit > prune_exit ? backup_exit : prune_exit ))

if [ ${global_exit} -eq 1 ];
then
    info "Backup and/or Prune finished with a warning"
fi

if [ ${global_exit} -gt 1 ];
then
    info "Backup and/or Prune finished with an error"
fi

exit ${global_exit}
