#!/usr/bin/env python3

import subprocess
import re
import sys
from collections import defaultdict

if len(sys.argv) != 3 or '-h' in sys.argv or '--help' in sys.argv:
    print('Usage: mirror-displays main mirror')
    print('\tmain: main output -> use its preferred resolution for both')
    print('\tmirror: mirror the main output here')
    if not '-h' in sys.argv and not '--help' in sys.argv:
        exit(-1)
    else:
        exit(0)

main = sys.argv[1]
mirror = sys.argv[2]

xrandr = subprocess.run(['xrandr'], stdout=subprocess.PIPE, check=True, encoding='utf-8')
stdout = xrandr.stdout.split('\n')

current_output = None
outputs = defaultdict(list)
preferred_modes = {}

for line in stdout:
    if line == '' or line.startswith('Screen'):
        continue
    if not line.startswith(' '):
        current_output = re.match(r'[\S]+', line).group(0)
    else:
        mode = re.match(r'[\s]*([0-9x]+)', line).group(1)
        preferred = '+' in line
        outputs[current_output].append(mode)
        if preferred:
            preferred_modes[current_output] = mode

for o in [main, mirror]:
    if o not in outputs:
        print('Could not find modes for output {}'.format(o))
        exit(-1)

if main not in preferred_modes:
    print('Could not find preferred mode for main output {}'.format(main))
    exit(-1)

res = preferred_modes[main]

if res not in outputs[mirror]:
    print('Preferred mode of main ({}) is no viable mode for mirror; options are:'.format(res))
    for mode in outputs[mirror]:
        print('  {}'.format(mode))
    exit(-1)

subprocess.run(['xrandr', '--output', main, '--mode', res, '--output', mirror, '--same-as', main, '--mode', res])
